% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lu-sample-location.R
\name{delete_sample_location}
\alias{delete_sample_location}
\title{Delete Sample Location}
\usage{
delete_sample_location(con, sample_location_id)
}
\arguments{
\item{con}{A DBI connection object obtained from DBI::dbConnect()}

\item{sample_location_id}{A numeric ID for the targeted sample location \code{\link{get_sample_locations}}}
}
\description{
\code{delete_sample_location()} deletes an existing sample location in the sample location lookup table
}
\details{
\strong{Note:} If an sample location has been associated with a permit record, then
the database restricts deleting this sample location. You must first update those records
with a new sample location before reattempting to delete the sample location. Consider
using the \code{\link{update_sample_location_status}} function if you are wanting to
retire an sample location while retaining its value for historic records.
}
\examples{
# example database connection
cfg <- config::get()
con <- DBI::dbConnect(RPostgres::Postgres(),
                      dbname = cfg$dbname,
                      host = cfg$host,
                      port = cfg$port,
                      user = cfg$username,
                      password = cfg$password)

all_sample_locations <- get_sample_locations(con)
View(all_sample_locations) # to view the ID of the sample location needing deletion

delete_sample_location(con, 4)
}
\seealso{
Other sample location functions: 
\code{\link{add_sample_location}()},
\code{\link{get_sample_locations}()},
\code{\link{update_sample_location_status}()},
\code{\link{update_sample_location}()}
}
\concept{sample location functions}
