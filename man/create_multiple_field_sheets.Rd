% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field-sheet.R
\name{create_multiple_field_sheets}
\alias{create_multiple_field_sheets}
\title{Create Multiple Field Sheets}
\usage{
create_multiple_field_sheets(con, sample_event_ids, field_sheet_filepath)
}
\arguments{
\item{con}{A valid connection to the database}

\item{field_sheet_filepath}{The filepath and name desired for the workbook containing field sheets.}

\item{added_sample_plan}{The object created by running \code{add_sample_plan()}. This is a named list containing elements
"number_of_samples_added" and "sample_ids_created". "sample_ids_created" is a table and must contain a column
"sample_event_id".}
}
\value{
A Workbook object from \code{\link[openxlsx]{createWorkbook}} with a worksheet for each sampling event in the
sample plan.
}
\description{
\code{create_multiple_field_sheets()} creates an excel workbook and appends
multiple formatted field worksheets for sample event IDs in a given sample plan.
}
\details{
\code{create_multiple_field_sheets()} combines \code{get_field_sheet_sample_plan()} and \code{create_field_sheet()} into
one function. Field sheets are created for all unique sample event IDs in a given sample plan.
\code{get_field_sheet_sample_plan()} and \code{create_field_sheet()} can still be run independently to create one field
sheet at a time.
}
\examples{
con <- gr_db_connect()
# add sample plan
sample_plan_2022_final <- read_csv("data-raw/2022_sample_plan.csv") |> distinct_all()
2022_sample_plan <- add_sample_plan(con, sample_plan_2022_final, verbose = TRUE)

# create workbook with field sheets for all sample event IDs in the 2022 sample plan
create_multiple_field_sheets(con, added_sample_plan = 2022_sample_plan, "data-raw/2022_field_sheets.xlsx")
}
\seealso{
Other field sheet helpers: 
\code{\link{create_field_sheet}()},
\code{\link{get_field_sheet_event_plan}()},
\code{\link{process_field_sheet_samples}()},
\code{\link{update_field_sheet_samples}()}
}
\concept{field sheet helpers}
