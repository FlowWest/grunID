% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enum.R
\name{get_enum_values}
\alias{get_enum_values}
\title{Get Enumerated Type Values}
\usage{
get_enum_values(
  con,
  enum = c("bin_code_enum", "survey_type_enum", "life_stage_enum", "origin_enum",
    "run_mode_enum", "optics_enum", "light_source_enum", "lamp_energy_enum",
    "well_location_enum")
)
}
\arguments{
\item{con}{A DBI connection object obtained from DBI::dbConnect()}

\item{enum}{Provide one of the following:
\itemize{
\item \strong{"bin_code_enum"} Used for generating sampling protocols and sample IDs
\item \strong{"survey_type_enum"} Used for describing the survey types in permits
\item \strong{"life_stage_enum"} Used for specifying chinook life stage in permits
\item \strong{"origin_enum"} Used for specifying the chinook origin in permits
\item \strong{"run_mode_enum"} Used for describing the run mode in the Synergy H1 protocol
\item \strong{"optics_enum"} Used for describing the optics setting in the Synergy H1 protocol
\item \strong{"light_source_enum"} Used for describing the light source in the Synergy H1 protocol
\item \strong{"lamp_energy_enum"} Used for describing the lamp energy setting in the Synergy H1 protocol
\item \strong{"well_location_enum"} Used for mapping the Synergy H1 result output to sample
IDs well location in the assay results
}}
}
\description{
\code{get_enum_values()} returns existing values within an enum
}
\examples{
# example database connection
cfg <- config::get()
con <- DBI::dbConnect(RPostgres::Postgres(),
                      dbname = cfg$dbname,
                      host = cfg$host,
                      port = cfg$port,
                      user = cfg$username,
                      password = cfg$password)

get_enum_values(con, "bin_code_enum")
}
\seealso{
Other enum method functions: 
\code{\link{add_enum_value}()},
\code{\link{update_enum_value}()}
}
\concept{enum method functions}
