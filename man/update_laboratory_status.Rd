% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lu-laboratory.R
\name{update_laboratory_status}
\alias{update_laboratory_status}
\title{Update Laboratory Status}
\usage{
update_laboratory_status(con, laboratory_id, set_active = TRUE)
}
\arguments{
\item{con}{A DBI connection object obtained from DBI::dbConnect()}

\item{laboratory_id}{A numeric ID for the targeted laboratory \code{\link{get_agencies}}}

\item{set_active}{A boolean, TRUE for activating and FALSE for deactivating.
When a record is active, it is returned by default when \code{\link{get_agencies}}
is called. This helps preserve look up values that are valid in historic
contexts, but are no longer valid for current data records.}
}
\description{
\code{update_laboratory_status()} changes active flag on existing laboratory in the laboratory lookup table
}
\examples{
# example database connection
cfg <- config::get()
con <- DBI::dbConnect(RPostgres::Postgres(),
                      dbname = cfg$dbname,
                      host = cfg$host,
                      port = cfg$port,
                      user = cfg$username,
                      password = cfg$password)

all_agencies <- get_agencies(con)
View(all_agencies) # to view the ID of the laboratory needing status change

#deactivate
update_laboratory_status(con, 4, set_active=FALSE)
#reactivate
update_laboratory_status(con, 4)
}
\seealso{
Other laboratory functions: 
\code{\link{add_laboratory}()},
\code{\link{delete_laboratory}()},
\code{\link{get_laboratories}()},
\code{\link{update_laboratory}()}
}
\concept{laboratory functions}
