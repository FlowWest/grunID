% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lu-protocol.R
\name{delete_protocol}
\alias{delete_protocol}
\title{Delete Protocol}
\usage{
delete_protocol(con, protocol_name)
}
\arguments{
\item{con}{A DBI connection object obtained from DBI::dbConnect()}

\item{protocol_id}{A numeric ID for the targeted protocol \code{\link{get_protocols}}
\strong{Note:} If an protocol has been associated with a assay result record, then
the database restricts deleting this protocol. You must first update those records
with a new protocol before reattempting to delete the protocol. Consider
using the \code{\link{update_protocol_status}} function if you are wanting to
retire an protocol while retaining its value for historic records.}
}
\description{
\code{delete_protocol()} deletes an existing protocol in the protocol lookup table
}
\examples{
# example database connection
cfg <- config::get()
con <- DBI::dbConnect(RPostgres::Postgres(),
                      dbname = cfg$dbname,
                      host = cfg$host,
                      port = cfg$port,
                      user = cfg$username,
                      password = cfg$password)

all_protocols <- get_protocols(con)
View(all_protocols) # to view the ID of the protocol needing deletion

delete_protocol(con, 1)
}
\seealso{
Other protocol functions: 
\code{\link{add_protocol}()},
\code{\link{get_protocols}()},
\code{\link{update_protocol_status}()},
\code{\link{update_protocol}()}
}
\concept{protocol functions}
